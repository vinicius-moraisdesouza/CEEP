# Em core/management/commands/seed_turmas.py

from django.core.management.base import BaseCommand
from core.models import Curso, Turma
from django.db import IntegrityError

class Command(BaseCommand):
    help = "Popula o banco com a estrutura completa de cursos e turmas do CEEP Guanambi."

    def handle(self, *args, **kwargs):
        cursos_dados = {
            # Eixo da Sa√∫de
            "An√°lises Cl√≠nicas": {
                "eixo": "SAUDE", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 04'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 03'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 14'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 13'), ('2¬∫ ANO', 'vespertino', 'V2', 'SALA 14'),
                    ('3¬∫ ANO', 'matutino', 'M1', 'SALA 04 PAV - A'), ('3¬∫ ANO', 'matutino', 'M2', 'SALA 02 PAV - A'),
                    ('3¬∫ ANO', 'vespertino', 'V1', 'SALA 04 PAV - A'), ('3¬∫ ANO', 'vespertino', 'V2', 'SALA 02 PAV - A'),
                    ('I M√ìDULO', 'noturno', None, 'SALA 14', 'SUBSEQUENTE'), ('II M√ìDULO', 'noturno', None, 'SALA 15', 'SUBSEQUENTE'),
                    ('III M√ìDULO', 'noturno', None, 'SALA 16', 'SUBSEQUENTE'), ('IV M√ìDULO', 'noturno', None, 'SALA 17', 'SUBSEQUENTE'),
                ]
            },
            "Enfermagem": {
                "eixo": "SAUDE", "turmas": [
                    ('III M√ìDULO', 'noturno', None, 'SALA 18', 'SUBSEQUENTE'), ('IV M√ìDULO', 'noturno', None, 'SALA 19', 'SUBSEQUENTE'),
                    ('V M√ìDULO', 'noturno', None, 'SALA 23', 'SUBSEQUENTE'), ('VI M√ìDULO', 'noturno', None, 'SALA 24', 'SUBSEQUENTE'),
                ]
            },
            "Seguran√ßa do Trabalho": {
                "eixo": "SAUDE", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 08'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 08'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 17'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 17'),
                    ('3¬∫ ANO', 'matutino', 'M1', 'SALA 24'), ('3¬∫ ANO', 'vespertino', 'V1', 'SALA 24'),
                    ('II M√ìDULO', 'noturno', None, 'SALA 21', 'SUBSEQUENTE'), ('III M√ìDULO', 'noturno', None, 'SALA 22', 'SUBSEQUENTE'),
                ]
            },
            # Eixo de Gest√£o
            "Administra√ß√£o": {
                "eixo": "GESTAO", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 02'), ('1¬∫ ANO', 'matutino', 'M2', 'SALA 03'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 02'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 13'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 10'),
                    ('3¬∫ ANO', 'matutino', 'M1', 'SALA 19'), ('3¬∫ ANO', 'matutino', 'M2', 'SALA 20'), ('3¬∫ ANO', 'matutino', 'M3', 'SALA 21'),
                    ('3¬∫ ANO', 'vespertino', 'V1', 'SALA 21'), ('3¬∫ ANO', 'vespertino', 'V2', 'SALA 22'),
                    ('II M√ìDULO', 'noturno', None, 'SALA 02', 'PROEJA'), ('III M√ìDULO', 'noturno', None, 'SALA 03', 'PROEJA'),
                    ('IV M√ìDULO', 'noturno', None, 'SALA 04', 'PROEJA'), ('II M√ìDULO', 'noturno', None, 'SALA 13', 'SUBSEQUENTE'),
                ]
            },
            "Biotecnologia": {
                "eixo": "GESTAO", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 05'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 04'), ('1¬∫ ANO', 'vespertino', 'V2', 'SALA 05'),
                    ('2¬∫ ANO', 'matutino', 'M1', None),
                    ('3¬∫ ANO', 'vespertino', 'V1', 'SALA 19'),
                ]
            },
            "Finan√ßas": {
                "eixo": "GESTAO", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 06'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 06'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 15'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 15'),
                    ('3¬∫ ANO', 'matutino', 'M1', None),
                ]
            },
            "Log√≠stica": {
                "eixo": "GESTAO", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 07'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 07'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 16'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 16'),
                    ('3¬∫ ANO', 'matutino', 'M1', None),
                    ('I M√ìDULO', 'noturno', None, 'SALA 06', 'PROEJA'),
                ]
            },
            "Servi√ßos Jur√≠dicos": {
                "eixo": "GESTAO", "turmas": [
                    ('1¬∫ ANO', 'matutino', 'M1', 'SALA 09'), ('1¬∫ ANO', 'matutino', 'M2', 'SALA 10'), ('1¬∫ ANO', 'vespertino', 'V1', 'SALA 09'),
                    ('2¬∫ ANO', 'matutino', 'M1', 'SALA 18'), ('2¬∫ ANO', 'vespertino', 'V1', 'SALA 18'), ('2¬∫ ANO', 'vespertino', 'V2', 'SALA 20'),
                    ('3¬∫ ANO', 'matutino', 'M1', 'SALA 22'), ('3¬∫ ANO', 'matutino', 'M2', 'SALA 23'), ('3¬∫ ANO', 'vespertino', 'V1', 'SALA 23'),
                    ('II M√ìDULO', 'noturno', None, 'SALA 07', 'PROEJA'), ('IV M√ìDULO', 'noturno', None, 'SALA 08', 'PROEJA'), ('V M√ìDULO', 'noturno', None, 'SALA 09', 'PROEJA'),
                ]
            },
            "Edifica√ß√µes": { "eixo": "GESTAO", "turmas": [('I M√ìDULO', 'noturno', None, 'SALA 20', 'SUBSEQUENTE')] },
            "Panifica√ß√£o": { "eixo": "GESTAO", "turmas": [('I M√ìDULO', 'noturno', None, 'SALA 05', 'PROEJA')] },
        }

        self.stdout.write(self.style.NOTICE("üöÄ Iniciando o seed de cursos e turmas..."))
        
        cursos_criados, cursos_atualizados, turmas_criadas, turmas_atualizadas = 0, 0, 0, 0

        for nome_curso, dados_curso in cursos_dados.items():
            curso, criado = Curso.objects.update_or_create(nome=nome_curso, defaults={'eixo': dados_curso["eixo"]})
            if criado: cursos_criados += 1
            else: cursos_atualizados += 1
            
            for dados_turma in dados_curso["turmas"]:
                if len(dados_turma) == 5:
                    ano_modulo, turno, turma_nome, sala, modalidade = dados_turma
                else:
                    ano_modulo, turno, turma_nome, sala = dados_turma
                    modalidade = None
                
                try:
                    _, criado = Turma.objects.update_or_create(
                        curso=curso, ano_modulo=ano_modulo, turno=turno,
                        turma=turma_nome, modalidade=modalidade,
                        defaults={'sala': sala} 
                    )
                    if criado: turmas_criadas += 1
                    else: turmas_atualizadas += 1
                except IntegrityError as e:
                    self.stdout.write(self.style.WARNING(f"‚ö†Ô∏è Erro de integridade ao processar {curso}-{ano_modulo}: {e}"))
        
        self.stdout.write(self.style.SUCCESS(f"‚úÖ Seed finalizado!"))
        self.stdout.write(f"   - Cursos criados: {cursos_criados}")
        self.stdout.write(f"   - Cursos atualizados: {cursos_atualizados}")
        self.stdout.write(f"   - Turmas criadas: {turmas_criadas}")
        self.stdout.write(f"   - Turmas atualizadas: {turmas_atualizadas}")