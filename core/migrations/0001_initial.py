# Generated by Django 5.2.2 on 2025-10-20 19:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('eixo', models.CharField(choices=[('SAUDE', 'Eixo da Saúde'), ('GESTAO', 'Eixo de Gestão')], default='GESTAO', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(choices=[('admin', 'Admin'), ('professor', 'Professor'), ('aluno', 'Aluno'), ('servidor', 'Servidor'), ('diretor', 'Diretor')], default='admin', max_length=10)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('rg', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('orgao', models.CharField(blank=True, max_length=10, null=True)),
                ('data_expedicao', models.DateField(blank=True, null=True)),
                ('cidade_nascimento', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_matricula', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('nome_pai', models.CharField(blank=True, max_length=150, null=True)),
                ('nome_mae', models.CharField(blank=True, max_length=150, null=True)),
                ('responsavel_matricula', models.CharField(blank=True, max_length=150, null=True)),
                ('endereco_rua', models.CharField(blank=True, max_length=150, null=True)),
                ('endereco_numero', models.CharField(blank=True, max_length=10, null=True)),
                ('endereco_bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('endereco_cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('endereco_cep', models.CharField(blank=True, max_length=9, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('senha_temporaria', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Estagio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supervisor_nome', models.CharField(max_length=150)),
                ('supervisor_empresa', models.CharField(max_length=150)),
                ('supervisor_cargo', models.CharField(max_length=100)),
                ('supervisor_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('status_geral', models.CharField(default='Em andamento', max_length=50)),
                ('aluno', models.OneToOneField(limit_choices_to={'tipo': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('orientador', models.ForeignKey(blank=True, limit_choices_to={'tipo': 'professor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estagios_orientados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ch', models.IntegerField(default=20)),
                ('professores', models.ManyToManyField(blank=True, limit_choices_to={'tipo': 'professor'}, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_modulo', models.CharField(choices=[('1º ANO', '1º ANO'), ('2º ANO', '2º ANO'), ('3º ANO', '3º ANO'), ('I MÓDULO', 'I MÓDULO'), ('II MÓDULO', 'II MÓDULO'), ('III MÓDULO', 'III MÓDULO'), ('IV MÓDULO', 'IV MÓDULO'), ('V MÓDULO', 'V MÓDULO'), ('VI MÓDULO', 'VI MÓDULO')], max_length=20)),
                ('turno', models.CharField(choices=[('matutino', 'Matutino'), ('vespertino', 'Vespertino'), ('noturno', 'Noturno')], max_length=20)),
                ('turma', models.CharField(blank=True, help_text='Ex: M1, V2 ou deixe vazio se for módulo noturno.', max_length=10, null=True)),
                ('modalidade', models.CharField(blank=True, max_length=50, null=True)),
                ('sala', models.CharField(blank=True, max_length=20, null=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.curso')),
            ],
            options={
                'unique_together': {('curso', 'ano_modulo', 'turno', 'turma', 'modalidade')},
            },
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota_1', models.FloatField(blank=True, null=True)),
                ('nota_2', models.FloatField(blank=True, null=True)),
                ('nota_3', models.FloatField(blank=True, null=True)),
                ('nota_recuperacao', models.FloatField(blank=True, null=True)),
                ('media_final', models.FloatField(blank=True, null=True)),
                ('status_final', models.CharField(blank=True, max_length=30)),
                ('aluno', models.ForeignKey(limit_choices_to={'tipo': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.materia')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.turma')),
            ],
        ),
        migrations.AddField(
            model_name='materia',
            name='turmas',
            field=models.ManyToManyField(blank=True, to='core.turma'),
        ),
        migrations.CreateModel(
            name='DocumentoEstagio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('AVALIACAO_ORIENTADOR', 'Avaliação do Orientador'), ('AVALIACAO_SUPERVISOR', 'Avaliação do Supervisor'), ('TERMO_COMPROMISSO', 'Termo de Compromisso'), ('FICHA_IDENTIFICACAO', 'Ficha de Identificação'), ('FICHA_PESSOAL', 'Ficha Pessoal'), ('COMP_RESIDENCIA', 'Comprovante de Residência'), ('COMP_AGUA_LUZ', 'Comprovante de Água/Luz'), ('ID_CARD', 'Cartão de Identidade'), ('SUS_CARD', 'Cartão do SUS'), ('VACINA_CARD', 'Cartão de Vacina'), ('APOLICE_SEGURO', 'Apólice de Seguro')], max_length=50)),
                ('dados_formulario', models.JSONField(blank=True, default=dict, help_text='Respostas do formulário preenchido pelo usuário.')),
                ('arquivo_anexo', models.FileField(blank=True, null=True, upload_to='anexos_estagio/')),
                ('status', models.CharField(choices=[('RASCUNHO', 'Rascunho (em preenchimento pelo aluno)'), ('AGUARDANDO_ASSINATURAS', 'Aguardando Assinaturas'), ('EM_VERIFICACAO', 'Em Verificação (pelo Servidor)'), ('FINALIZADO', 'Finalizado e Arquivado')], default='RASCUNHO', max_length=30)),
                ('assinado_aluno_em', models.DateTimeField(blank=True, null=True)),
                ('assinado_orientador_em', models.DateTimeField(blank=True, null=True)),
                ('assinado_diretor_em', models.DateTimeField(blank=True, null=True)),
                ('pdf_supervisor_assinado', models.FileField(blank=True, null=True, upload_to='pdfs_assinados/')),
                ('publico', models.BooleanField(default=False, help_text='Se marcado, o orientador e servidor podem ver.')),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('estagio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='core.estagio')),
            ],
            options={
                'unique_together': {('estagio', 'tipo_documento')},
            },
        ),
        migrations.CreateModel(
            name='ProfessorMateriaTurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.materia')),
                ('professor', models.ForeignKey(limit_choices_to={'tipo': 'professor'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.turma')),
            ],
            options={
                'unique_together': {('professor', 'materia', 'turma')},
            },
        ),
        migrations.CreateModel(
            name='AlunoTurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_matricula', models.DateField(auto_now_add=True)),
                ('ano_letivo', models.CharField(blank=True, max_length=10, null=True)),
                ('aluno', models.ForeignKey(limit_choices_to={'tipo': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.turma')),
            ],
            options={
                'unique_together': {('aluno', 'turma')},
            },
        ),
    ]
